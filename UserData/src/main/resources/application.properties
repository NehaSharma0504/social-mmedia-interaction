# application.properties
server.servlet.context-path=/myapp
server.port=8080
# MongoDB connection URI
spring.data.mongodb.uri=mongodb://localhost:27017/MyMongoDB
collection.name=user_data

# Twitter API Configuration
twitter.consumerKey=Z5P1erg2guabZ4KdMU90Rctr5
twitter.consumerSecret=iUqyxOI5wgTaiJzMHs0ZwyL0Fwx6HTgvyP2Oxtez4OquUxDIVJ
twitter.accessToken=1682318990578794496-DMzFUAp4xJwwSBOIb1HcmIz5UFLaas
twitter.accessTokenSecret=k8DFSobqghelyQ9NuPI1pHqSfh4urrtXknPHztrDS8DWe

# Give a name to your Eureka server
spring.application.name=user-client
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.instance.hostname=localhost

#JVM Config
spring-boot.run.jvmArguments=-XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:ParallelGCThreads=4 -XX:GCTimeRatio=8

#kafka Config
#producer config
spring.kafka.bootstrap-servers= DESKTOP-QIEULRF:9092
spring.kafka.producer.bootstrap-servers=DESKTOP-QIEULRF:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer
#consumer config
spring.kafka.consumer.group-id=my-social-media-group-id
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/